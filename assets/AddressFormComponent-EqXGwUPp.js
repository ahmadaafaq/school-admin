import{k as M,l as m,H as h,P as i,a as s,b as W,z as H,R as N,A as T,j as a,B as I,q as f,v as k,I as E,S as R,M as z,C as q}from"./index-dsWAcX1f.js";const U=M({street:m().min(4,"Too Short!").max(80,"Too Long!").matches(/[a-z]/,"Invalid Street Name Detected").required("This Field is Required"),landmark:m().min(4,"Too Short!").max(80,"Too Long!").matches(/[a-z]/,"Invalid Landmark Detected"),zipcode:m().min(4,"Too Short!").max(20,"Too Long!").matches(/[0-9]/,"Invalid Zipcode Detected").required("This Field is Required"),country:h().required("This Field is Required"),state:h().required("This Field is Required"),city:h().required("This Field is Required")});var $={BASE_URL:"/",MODE:"production",DEV:!1,PROD:!0,SSR:!1};const d=$.VITE_DEFAULT_COUNTRY_ID,Z={street:"",landmark:"",zipcode:"",country:d,state:0,city:0},Q=({onChange:p,refId:v,update:B,setDirty:V,reset:x,setReset:_,iCardDetails:n=null,setICardDetails:y=null,updatedValues:u=null})=>{var b,F;const[w,A]=s.useState(Z),[S,g]=s.useState([]),[o,L]=s.useState(null),[C,l]=s.useState([]),[Y,D]=s.useState(null),O=W("(min-width:600px)"),e=H({initialValues:w,validationSchema:U,enableReinitialize:!0,onSubmit:()=>P()});N.useImperativeHandle(v,()=>({Submit:async()=>{await e.submitForm()}}));const P=()=>{p&&p({values:e.values,validated:e.isSubmitting?Object.keys(e.errors).length===0:!1})};s.useEffect(()=>{x&&(e.resetForm(),_(!1))},[x]),s.useEffect(()=>{e.dirty&&V(!0)},[e.dirty]),s.useEffect(()=>{u&&A(u)},[u]),s.useEffect(()=>{(()=>{(e.values.country||d)&&T.StateAPI.getStates(e.values.country||d).then(r=>{(r==null?void 0:r.status)==="Success"?(g(r.data.list),l([]),B&&j()):(g([]),l([]),e.setFieldValue("state",0),e.setFieldValue("city",0))}).catch(r=>{throw r})})()},[e.values.country,d]),s.useEffect(()=>{o&&j()},[o]);const j=s.useCallback(()=>{T.CityAPI.getCities(e.values.state||o).then(t=>{(t==null?void 0:t.status)==="Success"?l(t.data.list):(l([]),e.setFieldValue("city",0))}).catch(t=>{l([]),e.setFieldValue("city",0),console.log("Error getting cities",t)})},[e.values.state,o]);return s.useEffect(()=>{var t;if(e.values.state){const r=S.filter(c=>c.id===e.values.state)||[];console.log(r,"db state"),n&&y({...n,studentState:(t=r[0])==null?void 0:t.name})}},[(b=e.values)==null?void 0:b.state]),s.useEffect(()=>{var t;if(e.values.city){const r=C.filter(c=>c.id===e.values.city)||[];console.log(r,"db city"),n&&y({...n,studentCity:(t=r[0])==null?void 0:t.name})}},[(F=e.values)==null?void 0:F.city]),a.jsx(I,{m:"20px",marginBottom:"60px",children:a.jsx("form",{ref:v,children:a.jsxs(I,{display:"grid",gap:"30px",gridTemplateColumns:"repeat(4, minmax(0, 1fr))",position:"relative",id:"box-shadow",sx:{"& > div":{gridColumn:O?void 0:"span 4"},transform:"translate(0)",transformStyle:"preserve-3d"},children:[a.jsx(f,{fullWidth:!0,variant:"filled",type:"text",name:"street",label:"Street*",autoComplete:"new-street",onBlur:e.handleBlur,onChange:e.handleChange,value:e.values.street,error:!!e.touched.street&&!!e.errors.street,helperText:e.touched.street&&e.errors.street,sx:{gridColumn:"span 2"}}),a.jsx(f,{fullWidth:!0,variant:"filled",type:"text",name:"landmark",label:"Landmark",autoComplete:"new-landmark",onBlur:e.handleBlur,onChange:e.handleChange,value:e.values.landmark,error:!!e.touched.landmark&&!!e.errors.landmark,helperText:e.touched.landmark&&e.errors.landmark,sx:{gridColumn:"span 2"}}),a.jsx(f,{fullWidth:!0,variant:"filled",type:"text",name:"zipcode",label:"Zipcode*",autoComplete:"new-zipcode",onBlur:e.handleBlur,onChange:e.handleChange,value:e.values.zipcode,error:!!e.touched.zipcode&&!!e.errors.zipcode,helperText:e.touched.zipcode&&e.errors.zipcode}),a.jsxs(k,{variant:"filled",sx:{minWidth:120},error:!!e.touched.state&&!!e.errors.state,children:[a.jsx(E,{id:"stateField",children:"--Select State*--"}),a.jsx(R,{id:"state",name:"state",variant:"filled",value:e.values.state,onChange:t=>{L(t.target.value),e.setFieldValue("state",t.target.value)},children:S.map(t=>a.jsx(z,{value:t.id,name:t.name,children:t.name},t.name))}),a.jsx(q,{children:e.touched.state&&e.errors.state})]}),a.jsxs(k,{variant:"filled",sx:{minWidth:120},error:!!e.touched.city&&!!e.errors.city,children:[a.jsx(E,{id:"cityField",children:"--Select City*--"}),a.jsx(R,{id:"city",name:"city",variant:"filled",value:e.values.city,onChange:t=>{D(t.target.value),e.setFieldValue("city",t.target.value)},children:C.map(t=>a.jsx(z,{value:t.id,name:t.name,children:t.name},t.name))}),a.jsx(q,{children:e.touched.city&&e.errors.city})]})]})})})};Q.propTypes={onChange:i.func,refId:i.shape({current:i.any}),update:i.bool,setDirty:i.func,reset:i.bool,setReset:i.func,updatedValues:i.object,iCardDetails:i.object,setICardDetails:i.func};export{Q as A};
